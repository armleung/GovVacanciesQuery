{"version":3,"sources":["shared/civil.js","shared/nonCivil.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["CIVIL","id","post","department","salary","requirement","postdate","deadline","NONCIVIL","withStyles","theme","text","paddingTop","spacing","unit","paddingLeft","paddingRight","paper","paddingBottom","list","marginBottom","subHeader","backgroundColor","palette","background","props","classes","react_default","a","createElement","className","CssBaseline_default","Paper_default","square","Typography_default","variant","gutterBottom","List_default","ListSubheader_default","map","_ref","react","key","ListItem_default","button","Avatar_default","alt","src","ListItemText_default","primary","secondary","Divider_default","_ref2","App","MainComponent","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62dc245e.chunk.js","sourcesContent":["export const CIVIL = [\n    {\n      id: 41458,\n      post: '農林助理員(自然護理及郊野公園)',\n      department : '漁農自然護理署',\n      salary : '港幣每月19030元',\n      requirement : '香港中學會考成績',\n      postdate: '29/03/2019',\n      deadline: '12/04/2019 23:59:00',\n    },\n    {\n      id: 40349,\n      post: '二級獸醫實驗室技術員',\n      department : '漁農自然護理署',\n      salary : '港幣每月20270元',\n      requirement : '專業資格 文憑或高級證書',\n      postdate: '22/11/2018',\n      deadline: '全年接受申請 直至另行通知',\n    },\n\n    {\n      id: 41526,\n      post: '民航事務主任(適航)',\n      department : '民航處',\n      salary : '港幣每月53195元',\n      requirement : '專業資格',\n      postdate: '22/03/2019',\n      deadline: '12/04/2019 23:59:00',\n    },\n  ];","export const NONCIVIL = [\n    {\n      id: 41573,\n      post: '暑期實習生',\n      department : '政府統計處',\n      salary : '港幣每月10500元',\n      requirement : '其他: 全日制專上學院課程的學生',\n      postdate: '02/04/2019',\n      deadline: '15/04/2019 23:59:00',\n    },\n\n    {\n      id: 41519,\n      post: '農業調查員(兼職)',\n      department : '漁農自然護理署',\n      salary : '港幣每天999元',\n      requirement : '文憑或高級證書香港中學會考成績',\n      postdate: '29/03/2019',\n      deadline: '12/04/2019 23:59:00',\n    },\n  ];","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\n\nimport { CIVIL } from '../shared/civil';\nimport { NONCIVIL } from '../shared/nonCivil';\n\nconst styles = theme => ({\n  text: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingLeft: theme.spacing.unit * 2,\n    paddingRight: theme.spacing.unit * 2,\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing.unit * 2,\n  },\n  subHeader: {\n    backgroundColor: theme.palette.background.paper,\n  }\n});\n\nfunction MainApp(props) {\n  const { classes } = props;\n  return (\n      <div className=\"container\">\n        <CssBaseline />\n        <Paper square className={classes.paper}>\n          <Typography className={classes.text} variant=\"h5\" gutterBottom>\n            政 府 職 位 空 缺 查 詢 系 統\n          </Typography>\n          <List className={classes.list}>\n            <ListSubheader className={classes.subHeader}>公務員職位空缺</ListSubheader>\n              {CIVIL.map(({ id, post,salary,department}) => (\n                <Fragment key = {id}>      \n                  <ListItem button>\n                    <Avatar alt=\"Profile Picture\" src={'./static/images/avatar/' + department + '.png'}/>\n                    <ListItemText primary={post} secondary={salary}/>\n                  </ListItem>\n                </Fragment>\n              ))}\n            <Divider />\n            <ListSubheader className={classes.subHeader}>非公務員職位空缺</ListSubheader>\n              {NONCIVIL.map(({ id, post,salary,department}) => (\n                <Fragment key = {id}>      \n                  <ListItem button>\n                    <Avatar alt=\"Profile Picture\" src={'./static/images/avatar/' + department + '.png'}/>\n                    <ListItemText primary={post} secondary={salary}/>\n                  </ListItem>\n                </Fragment>\n              ))}\n          </List>\n        </Paper>\n      </div>\n  );\n}\n\nMainApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MainApp);\n","import React, { Component } from 'react';\nimport './App.css';\nimport MainComponent from './components/MainComponent';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <MainComponent />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}